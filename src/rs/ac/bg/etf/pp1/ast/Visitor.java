// generated with ast extension for cup
// version 0.8
// 22/5/2020 17:49:18


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Void Void);
    public void visit(ExprNeg ExprNeg);
    public void visit(DesignatorLbrack DesignatorLbrack);
    public void visit(StatementList StatementList);
    public void visit(ConstDeclSpec ConstDeclSpec);
    public void visit(Factor Factor);
    public void visit(IncDec IncDec);
    public void visit(VarSingleSpec VarSingleSpec);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(WAss WAss);
    public void visit(VarDeclSpec VarDeclSpec);
    public void visit(MethType MethType);
    public void visit(ActualParamList ActualParamList);
    public void visit(VarDeclList VarDeclList);
    public void visit(LParenCondition LParenCondition);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ConstSingleSpec ConstSingleSpec);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(ActualPars ActualPars);
    public void visit(BoolOp BoolOp);
    public void visit(MethVarDeclList MethVarDeclList);
    public void visit(Statement Statement);
    public void visit(ConstFactor ConstFactor);
    public void visit(EqualOp EqualOp);
    public void visit(AddOperations AddOperations);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(VarType VarType);
    public void visit(MulOperations MulOperations);
    public void visit(FormPars FormPars);
    public void visit(ConstType ConstType);
    public void visit(NotEq NotEq);
    public void visit(LeEq LeEq);
    public void visit(Less Less);
    public void visit(Greater Greater);
    public void visit(GteEq GteEq);
    public void visit(EqualBool EqualBool);
    public void visit(DivEq DivEq);
    public void visit(MulEq MulEq);
    public void visit(SubEq SubEq);
    public void visit(AddEq AddEq);
    public void visit(EqualNode EqualNode);
    public void visit(Modop Modop);
    public void visit(Divop Divop);
    public void visit(Mulop Mulop);
    public void visit(Subop Subop);
    public void visit(Addop Addop);
    public void visit(DesignatorLbrackNode DesignatorLbrackNode);
    public void visit(DesignatorArrayMemberNode DesignatorArrayMemberNode);
    public void visit(DesignatorNode DesignatorNode);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(NothNode NothNode);
    public void visit(DecNode DecNode);
    public void visit(IncNode IncNode);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstInt ConstInt);
    public void visit(NewArrayNode NewArrayNode);
    public void visit(FuncCall FuncCall);
    public void visit(ParenExpFactorNode ParenExpFactorNode);
    public void visit(Var Var);
    public void visit(ConstFactorNode ConstFactorNode);
    public void visit(TermNode TermNode);
    public void visit(TermMulopNode TermMulopNode);
    public void visit(TermExpr TermExpr);
    public void visit(BoolExpr BoolExpr);
    public void visit(EqExpr EqExpr);
    public void visit(OppExpr OppExpr);
    public void visit(NegativeExp NegativeExp);
    public void visit(RegularExp RegularExp);
    public void visit(DeclNodeStmt DeclNodeStmt);
    public void visit(DecrementOnlyNode DecrementOnlyNode);
    public void visit(IncrementOnlyNode IncrementOnlyNode);
    public void visit(ProcCall ProcCall);
    public void visit(BlockNode BlockNode);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ReadStmt ReadStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ErrAssignment ErrAssignment);
    public void visit(Assignment Assignment);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(Type Type);
    public void visit(VoidNode VoidNode);
    public void visit(MethTypeNode MethTypeNode);
    public void visit(MethNoVarDecl MethNoVarDecl);
    public void visit(MethConstDeclNode MethConstDeclNode);
    public void visit(MethVarDeclarations MethVarDeclarations);
    public void visit(MethodTypeNameNode MethodTypeNameNode);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ConstSingleSpecNode ConstSingleSpecNode);
    public void visit(MultiConstNode MultiConstNode);
    public void visit(SingleConstNode SingleConstNode);
    public void visit(ConstTypeNode ConstTypeNode);
    public void visit(ConstDecl ConstDecl);
    public void visit(ArrayDeclNodeErr ArrayDeclNodeErr);
    public void visit(AssNodeError AssNodeError);
    public void visit(ArrayDeclNode ArrayDeclNode);
    public void visit(AssNode AssNode);
    public void visit(NoAssNode NoAssNode);
    public void visit(SingleSpecNode SingleSpecNode);
    public void visit(MultiVarNode MultiVarNode);
    public void visit(SingleVarNode SingleVarNode);
    public void visit(VarTypeNode VarTypeNode);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(ConstDeclNode ConstDeclNode);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
